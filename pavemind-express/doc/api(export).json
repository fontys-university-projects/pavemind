{
  "openapi": "3.1.0",
  "info": {
    "title": "PaveMind",
    "version": "1.0",
    "description": "This is the main api for PaveMind",
    "contact": {
      "name": "Martin Iliev",
      "email": "martin.iliev@student.fontys.nl"
    }
  },
  "servers": [
    {
      "url": "https://pavemind-api.fhict-dev.com"
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "summary": "Sign Up",
        "operationId": "post-user",
        "responses": {
          "200": {
            "description": "User Created Succesfully"
          }
        },
        "description": "Registring user account, note that registration does not issue an JWT token, you are required to log in",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "confirmPassword"
                ]
              },
              "examples": {}
            }
          },
          "description": ""
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/user/login": {
      "post": {
        "summary": "Log In",
        "operationId": "post-user-login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "description": "The login enpoint will issue a new JWT token, keep in mind that these tokens never expire for the moment",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/user/info": {
      "get": {
        "summary": "User Info",
        "tags": [
          "account "
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uid": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "emailVerified": {
                      "type": "boolean"
                    },
                    "role": {
                      "type": "string",
                      "default": "User"
                    },
                    "profile": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "about": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-user-loginStatus",
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Getting the nessecary user information listed below"
      },
      "parameters": []
    },
    "/user/uni": {
      "get": {
        "summary": "User University",
        "tags": [
          "account "
        ],
        "operationId": "get-user-uni",
        "description": "Gets University Information from Key if applicable",
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uni": {
                      "type": "string"
                    },
                    "uniEmail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/diary": {
      "get": {
        "summary": "User Diary",
        "tags": [
          "diary",
          "account "
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-user-diary",
        "description": "Retreiveing users diary",
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "diary": [
                      {
                        "feeling": 3,
                        "createdAt": "2023-01-12T12:57:51.865Z"
                      },
                      {
                        "feeling": 3,
                        "createdAt": "2023-01-10T22:24:19.990Z"
                      },
                      {
                        "feeling": 2,
                        "createdAt": "2023-01-09T16:40:25.327Z"
                      },
                      {
                        "feeling": 2,
                        "createdAt": "2023-01-08T16:09:37.099Z"
                      },
                      {
                        "feeling": 1,
                        "createdAt": "2023-01-07T16:09:37.099Z"
                      }
                    ],
                    "emotions": {
                      "q1": 4.4,
                      "q2": 4.6,
                      "q3": 3.2,
                      "q4": 3.6
                    }
                  }
                },
                "properties": {
                  "diary": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "feeling": {
                          "type": "integer"
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "emotions": {
                    "type": "object",
                    "description": "These are only avaible if user is Premium subscriber",
                    "properties": {
                      "q1": {
                        "type": "number"
                      },
                      "q2": {
                        "type": "number"
                      },
                      "q3": {
                        "type": "number"
                      },
                      "q4": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "examples": {}
            }
          },
          "description": ""
        }
      },
      "parameters": [],
      "post": {
        "summary": "Fill in User Diary",
        "operationId": "post-user-diary",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "feeling": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2
                  },
                  "q1": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 8,
                    "description": "Premium only"
                  },
                  "q2": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 8,
                    "description": "Premium only"
                  },
                  "q3": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 8,
                    "description": "Premium only"
                  },
                  "q4": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 8,
                    "description": "Premium only"
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Submitting daily diary, this data can be overwriten by the user, each user has before 00:00 (Server time) to update their data accordigntly",
        "tags": [
          "account ",
          "diary"
        ]
      }
    },
    "/user/settings": {
      "post": {
        "summary": "User Settings",
        "operationId": "post-user-settings",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "about": {
                    "type": "string"
                  },
                  "dob": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "description": "Modifying user's settings (this works only for the user themself)",
        "tags": [
          "account "
        ]
      }
    },
    "/user/changePassword": {
      "post": {
        "summary": "Change Password",
        "operationId": "post-user-changePassword",
        "responses": {
          "200": {
            "description": "Password, has been successfully changed!"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": [
                  "oldPassword",
                  "newPassword",
                  "confirmPassword"
                ]
              }
            }
          }
        },
        "parameters": [],
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Password change request",
        "tags": [
          "account ",
          "auth"
        ]
      }
    },
    "/community/all": {
      "get": {
        "summary": "Community posts",
        "tags": [
          "community"
        ],
        "operationId": "get-community-posts",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        }
                      }
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "author": {
                            "type": "object",
                            "properties": {
                              "firstName": {
                                "type": "string"
                              },
                              "lastName": {
                                "type": "string"
                              },
                              "avatar": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "id": "63be043580ce8ad4100e9e99",
                      "title": "How I feel",
                      "body": "Ever man are put down his very. And marry may table him avoid. Hard sell it were into it upon. He forbade affixed parties of assured to me windows. Happiness him nor she disposing provision. Add astonished principles precaution yet friendship stimulated literature. State thing might stand one his plate. Offending or extremity therefore so difficult he on provision. Tended depart turned not are.",
                      "createdAt": "2023-01-10T10:35:01.517Z",
                      "author": {
                        "firstName": "Martin",
                        "lastName": "Iliev",
                        "avatar": "https://images.unsplash.com/photo-1640952131659-49a06dd90ad2?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MzN8fGF2YXRhcnxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=500&q=60",
                        "role": "Premium"
                      },
                      "comments": [
                        {
                          "comment": "To shewing another demands to. Marianne property cheerful informed at striking at. Clothes parlors however by cottage on. In views it or meant drift to. Be concern parlors settled or do shyness address. Remainder northward performed out for moonlight. Yet late add name was rent park from rich. He always do do former he highly.",
                          "createdAt": "2023-01-10T11:35:43.315Z",
                          "author": {
                            "firstName": "John",
                            "lastName": "Doe",
                            "avatar": "https://images.unsplash.com/photo-1654110455429-cf322b40a906?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=880&q=80",
                            "role": "User"
                          }
                        }
                      ]
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "x-internal": false,
        "description": "Retreiving all the community posts"
      },
      "parameters": []
    },
    "/community/{id}": {
      "get": {
        "summary": "Community post",
        "tags": [
          "community"
        ],
        "operationId": "get-community-post",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "title": {
                      "type": "string"
                    },
                    "body": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "authorId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "comments": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "authorId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "retreiving a single community post (currently not working)",
        "deprecated": true
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/community/post/new": {
      "parameters": [],
      "post": {
        "summary": "Create Community Post",
        "operationId": "post-community-post-new",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "body"
                ]
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Creatign a community post",
        "tags": [
          "community"
        ]
      }
    },
    "/community/{postId}/comment/new": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "postId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Comment to Community Post",
        "operationId": "post-post-postId-comment-new",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  }
                },
                "required": [
                  "comment"
                ]
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Adding comments to the specified commpountiy post",
        "tags": [
          "community"
        ]
      }
    },
    "/article/all": {
      "get": {
        "summary": "Articles",
        "tags": [
          "articles"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-article-articles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "thumbnail": {
                          "type": "string"
                        },
                        "body": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "data": [
                      {
                        "id": "63bdea7f80ce8ad4100e9e85",
                        "slug": "de-finisbus",
                        "title": "de Finibus Bonorum et Malorum",
                        "thumbnail": "https://images.unsplash.com/photo-1672911261089-c75302b2fd4e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1471&q=80",
                        "body": "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.",
                        "createdAt": "2023-01-10T22:45:19.571Z"
                      },
                      {
                        "id": "63bde86b80ce8ad4100e9e75",
                        "slug": "lore-ips",
                        "title": "1914",
                        "thumbnail": "https://images.unsplash.com/photo-1673286900865-ab88ead9285b?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80",
                        "body": "But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"",
                        "createdAt": "2023-01-09T22:36:27.144Z"
                      },
                      {
                        "id": "63bde82880ce8ad4100e9e6d",
                        "slug": "lorem-ipsum",
                        "title": "Lorem Ipsum",
                        "thumbnail": "https://images.unsplash.com/photo-1673340191070-6865e61be364?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=765&q=80",
                        "body": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        "createdAt": "2023-01-08T22:35:20.195Z"
                      },
                      {
                        "id": "63bde8fc80ce8ad4100e9e7d",
                        "slug": "lore",
                        "title": "The Denounce",
                        "thumbnail": "https://images.unsplash.com/photo-1673024697368-947323b88951?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80",
                        "body": "On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammelled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains.",
                        "createdAt": "2023-01-06T22:38:52.641Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Getting all the Articles"
      },
      "parameters": []
    },
    "/article/{id}": {
      "get": {
        "summary": "Article",
        "tags": [
          "articles"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-article-article",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "thumbnail": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "id": "63bdea7f80ce8ad4100e9e85",
                    "slug": "de-finisbus",
                    "title": "de Finibus Bonorum et Malorum",
                    "thumbnail": "https://images.unsplash.com/photo-1672911261089-c75302b2fd4e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1471&q=80",
                    "body": "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.",
                    "createdAt": "2023-01-10T22:45:19.571Z"
                  }
                }
              }
            }
          }
        },
        "description": "Retrieving single Article"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/article/new": {
      "parameters": [],
      "post": {
        "summary": "Create Article",
        "operationId": "post-article-new",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "slug": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "body"
                ]
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Creating an Artical\n\n**Requires \"Author\" Role**",
        "tags": [
          "articles"
        ]
      }
    },
    "/article/{articleId}/comment/new": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "articleId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Comment to Article",
        "operationId": "post-article-articleId-comment-new",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  }
                },
                "required": [
                  "comment"
                ]
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "description": "Creating comments for Articles (Altough this feature is implemented in the backent it was disabled)",
        "x-internal": false,
        "deprecated": true,
        "tags": [
          "articles"
        ]
      }
    }
  },
  "components": {
    "schemas": {},
    "requestBodies": {},
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "account "
    },
    {
      "name": "articles"
    },
    {
      "name": "auth"
    },
    {
      "name": "community"
    },
    {
      "name": "diary"
    },
    {
      "name": "settings"
    },
    {
      "name": "user"
    }
  ]
}