// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  uid           String    @unique
  createdAt     DateTime  @default(now())
  email         String    @unique
  emailVerified Boolean   @default(false)
  password      String
  role          UserRole  @default(User)
  avatar        String?
  firstName     String?
  lastName      String?
  about         String?
  dob           DateTime?
  activationKey String?
  article       Article[]
  post          Post[]
  comment       Comment[]
  diary         Diary[]
}

model Key {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  kid      String @unique
  uni      String
  uniEmail String @unique
}

model Article {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  slug      String   @unique
  thumbnail String
  title     String
  body      String
  createdAt DateTime @default(now())
  author    User     @relation(references: [id], fields: [authorId], onDelete: Cascade)
  authorId  String   @db.ObjectId
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  body      String
  createdAt DateTime @default(now())
  author    User     @relation(references: [id], fields: [authorId], onDelete: Cascade)
  authorId  String   @db.ObjectId

  comments Comment[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  comment   String
  createdAt DateTime @default(now())
  author    User     @relation(references: [id], fields: [authorId], onDelete: Cascade)
  authorId  String   @db.ObjectId

  post      Post?    @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String?  @db.ObjectId
}

model Diary {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  feeling   Int?
  q1        Int?
  q2        Int?
  q3        Int?
  q4        Int?
  createdAt DateTime @default(now())
  owner     User     @relation(references: [id], fields: [ownerId], onDelete: Cascade)
  ownerId   String   @db.ObjectId
}

enum UserRole {
  Author
  User
  Premium
  Admin
}
